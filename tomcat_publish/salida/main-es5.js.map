{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blockchain/blockchain.component.ts","webpack:///src/app/blockchain/blockchain.component.html","webpack:///src/app/geocerca-google/geocerca-google.component.ts","webpack:///src/app/geocerca-google/geocerca-google.component.html","webpack:///src/app/juegos/vieja/vieja.component.ts","webpack:///src/app/juegos/vieja/vieja.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/models/tio.ts","webpack:///src/app/store/login.actions.ts","webpack:///src/app/store/login.reducer.ts","webpack:///src/app/store/tasks.actions.ts","webpack:///src/app/store/tasks.reducer.ts","webpack:///src/app/store/users.actions.ts","webpack:///src/app/store/users.reducer.ts","webpack:///src/app/tasks/add-task/add-task.component.ts","webpack:///src/app/tasks/add-task/add-task.component.html","webpack:///src/app/tasks/list-tasks/list-tasks.component.ts","webpack:///src/app/tasks/list-tasks/list-tasks.component.html","webpack:///src/app/tasks/todo-tasks/todo-tasks.component.ts","webpack:///src/app/tasks/todo-tasks/todo-tasks.component.html","webpack:///src/app/tio/actualizar-tio.component.ts","webpack:///src/app/tio/actualizar-tio.component.html","webpack:///src/app/tio/detalle-tio.component.ts","webpack:///src/app/tio/detalle-tio.component.html","webpack:///src/app/tio/lista-tio.component.ts","webpack:///src/app/tio/lista-tio.component.html","webpack:///src/app/tio/login-usuarios/login-usuarios.component.ts","webpack:///src/app/tio/login-usuarios/login-usuarios.component.html","webpack:///src/app/tio/nuevo-tio.component.ts","webpack:///src/app/tio/nuevo-tio.component.html","webpack:///src/app/tio/registrar-usuarios/registrar-usuarios.component.ts","webpack:///src/app/tio/registrar-usuarios/registrar-usuarios.component.html","webpack:///src/app/tio/tio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","usuario","nombre","password","email","localStorage","getItem","JSON","parse","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","brandControl","required","selectFormControl","brands","value","viewValue","selector","templateUrl","styleUrls","setItem","AppModule","instrument","maxAge","logOnly","production","apiKey","tasks","users","login","metaReducers","declarations","providers","bootstrap","BlockChainComponent","tioService","router","store","bloques","select","console","log","navigate","alert","prueba","GeocercaGoogleComponent","lat","lng","clickeable","draggable","map","tituloMarker","markers","color","visible","paths","event","position","coords","push","Object","values","limpiar","mapClick","ViejaComponent","quiengano","squares","Array","fill","hayganador","contador","history","stepNumber","xIsNext","i","quiengano2","slice","caracter","toString","concat","length","calculateWinner","step","lines","a","b","c","handleClick","MenuComponent","location","usuariologeado","dispatch","Tio","INICIO_TASK","REGISTRO_TASK","InicioUsuario","payload","type","RegistroUsuario","initialState","loginReducer","state","action","stringify","usuario2","ADD_TASK","AddTask","name","taskReducer","AÑADIR_TASK","AñadirUsuario","username","firstName","lastName","userReducer","AddTaskComponent","addTask","ListTasksComponent","api","TodoTasksComponent","fetch","response","json","data","ActualizarTioComponent","activatedRoute","snapshot","params","detalle","subscribe","err","error","mensaje","tio","actualizar","onUpdate","DetalleTioComponent","window","back","ListaTioComponent","load","tios","lista","confirm","borrar","LoginUsuariosComponent","status","onLogin","NuevoTioComponent","nuevo","onCreate","RegistrarUsuariosComponent","registrar","TioService","httpClient","tioURL","valor","get","post","put","providedIn","environment","bootstrapModule","driver","INDEXEDDB"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ViejaComponent } from './juegos/vieja/vieja.component';\r\nimport { TodoTasksComponent } from './tasks/todo-tasks/todo-tasks.component';\r\nimport { GeocercaGoogleComponent } from './geocerca-google/geocerca-google.component';\r\n\r\n\r\nimport { ListaTioComponent } from './tio/lista-tio.component';\r\nimport { DetalleTioComponent } from './tio/detalle-tio.component';\r\nimport { NuevoTioComponent } from './tio/nuevo-tio.component';\r\nimport { ActualizarTioComponent } from './tio/actualizar-tio.component';\r\nimport { LoginUsuariosComponent } from './tio/login-usuarios/login-usuarios.component';\r\n\r\nimport { RegistrarUsuariosComponent } from './tio/registrar-usuarios/registrar-usuarios.component';\r\n\r\n\r\nimport { BlockChainComponent } from './blockchain/blockchain.component';\r\n\r\nimport { Tio } from './models/tio'\r\n\r\nvar usuario: Tio = {\r\n  id: 1,\r\n  nombre: \"error\",\r\n  password: \"123456\",\r\n  email: \"error@gmail.com\"\r\n}\r\n\r\nif(localStorage.getItem('login')){\r\n  usuario = JSON.parse(localStorage.getItem('login'))\r\n  //console.log('login')\r\n  //console.log(localStorage.getItem('login'))\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: '',  redirectTo: '/geocerca', pathMatch: 'full' },\r\n  {path: 'blockchain' , component: BlockChainComponent},\r\n  {path: 'login' , component: LoginUsuariosComponent},\r\n  {path: 'registro' , component: RegistrarUsuariosComponent},\r\n  {\r\n    path: 'vieja' , component: ViejaComponent\r\n  },\r\n  {\r\n    path: 'tasks' , component: TodoTasksComponent\r\n  },\r\n  {\r\n    path: 'geocerca' , component: GeocercaGoogleComponent\r\n  },\r\n  {path: 'lista', component: ListaTioComponent},\r\n  {path: 'detalle/:id', component: DetalleTioComponent},\r\n  {path: 'nuevo', component: NuevoTioComponent},\r\n  {path: 'actualizar/:id', component: ActualizarTioComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\nexport interface Brand {\r\n  value: number;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angularrouter';\r\n  brandControl = new FormControl('', [Validators.required]);\r\n  selectFormControl = new FormControl('', Validators.required);\r\n  brands: Brand[] = [\r\n    { value: 1, viewValue: 'Louis Vuitton' },\r\n    { value: 2, viewValue: 'Gucci' },\r\n    { value: 3, viewValue: 'Prada' },\r\n    { value: 4, viewValue: 'Chanel' },\r\n  ];\r\n}\r\n","<app-menu></app-menu>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet> \r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { storageSyncMetaReducer } from 'ngrx-store-persist';\r\n\r\nimport { taskReducer } from './store/tasks.reducer';\r\nimport { userReducer } from './store/users.reducer';\r\nimport { loginReducer } from './store/login.reducer';\r\n\r\n\r\nimport { AddTaskComponent } from './tasks/add-task/add-task.component';\r\nimport { ListTasksComponent } from './tasks/list-tasks/list-tasks.component';\r\nimport { ViejaComponent } from './juegos/vieja/vieja.component';\r\nimport { environment } from '../environments/environment';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TodoTasksComponent } from './tasks/todo-tasks/todo-tasks.component';\r\n\r\nimport { BlockChainComponent } from './blockchain/blockchain.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n/* import { \r\n  MatToolbarModule, \r\n  //MatIconModule, \r\n  //MatSidenavModule, \r\n  //MatListModule, \r\n  //MatButtonModule \r\n} from  '@angular/material'; */\r\n\r\n\r\nlocalStorage.setItem('URL', 'https://localhost:44382/');\r\n\r\n\r\n\r\n\r\n  import { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\n  import { MatIconRegistry } from '@angular/material/icon';\r\n  import { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n  import { MatBadgeModule } from '@angular/material/badge';\r\n  import { MatButtonModule } from '@angular/material/button';\r\n  import { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n  import { MatCardModule } from '@angular/material/card';\r\n  import { MatCheckboxModule } from '@angular/material/checkbox';\r\n  import { MatChipsModule } from '@angular/material/chips';\r\n  import { MatStepperModule } from '@angular/material/stepper';\r\n  import { MatDatepickerModule } from '@angular/material/datepicker';\r\n  import { MatDialogModule } from '@angular/material/dialog';\r\n  import { MatExpansionModule } from '@angular/material/expansion';\r\n  import { MatFormFieldModule } from '@angular/material/form-field';\r\n  import { MatGridListModule } from '@angular/material/grid-list';\r\n  import { MatIconModule } from '@angular/material/icon';\r\n  import { MatInputModule } from '@angular/material/input';\r\n  import { MatListModule } from '@angular/material/list';\r\n  import { MatMenuModule } from '@angular/material/menu';\r\n  import { MatPaginatorModule } from '@angular/material/paginator';\r\n  import { MatProgressBarModule } from '@angular/material/progress-bar';\r\n  import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n  import { MatRadioModule } from '@angular/material/radio';\r\n  import { MatRippleModule } from '@angular/material/core';\r\n  import { MatSelectModule } from '@angular/material/select';\r\n  import { MatSidenavModule } from '@angular/material/sidenav';\r\n  import { MatSliderModule } from '@angular/material/slider';\r\n  import { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n  import { MatSnackBarModule } from '@angular/material/snack-bar';\r\n  import { MatSortModule } from '@angular/material/sort';\r\n  import { MatTableModule } from '@angular/material/table';\r\n  import { MatTabsModule } from '@angular/material/tabs';\r\n  import { MatToolbarModule } from '@angular/material/toolbar';\r\n  import { MatTooltipModule } from '@angular/material/tooltip';\r\n  import { MatTreeModule } from '@angular/material/tree';\r\n  import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { GeocercaGoogleComponent } from './geocerca-google/geocerca-google.component';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { ListaTioComponent } from './tio/lista-tio.component';\r\nimport { NuevoTioComponent } from './tio/nuevo-tio.component';\r\nimport { DetalleTioComponent } from './tio/detalle-tio.component';\r\nimport { ActualizarTioComponent } from './tio/actualizar-tio.component';\r\nimport { LoginUsuariosComponent } from './tio/login-usuarios/login-usuarios.component';\r\nimport { RegistrarUsuariosComponent } from './tio/registrar-usuarios/registrar-usuarios.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddTaskComponent,\r\n    ViejaComponent,\r\n    ListTasksComponent,\r\n    TodoTasksComponent,\r\n    GeocercaGoogleComponent,\r\n    MenuComponent,\r\n    ListaTioComponent,\r\n    NuevoTioComponent,\r\n    DetalleTioComponent,\r\n    LoginUsuariosComponent,\r\n    ActualizarTioComponent,\r\n    RegistrarUsuariosComponent,\r\n    BlockChainComponent\r\n  ],\r\n  imports: [\r\n    \r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25, // Retains last 25 states\r\n      logOnly: environment.production, // Restrict extension to log-only mode\r\n      \r\n    }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDZktO_JnnvrY4BnD2IyZo8PqNXiDTWP1w'\r\n    }),\r\n    /* StoreModule.forRoot({\r\n      tasks: taskReducer,\r\n      users: userReducer,\r\n      login: loginReducer\r\n    }), */\r\n    StoreModule.forRoot({\r\n      tasks: taskReducer,\r\n      users: userReducer,\r\n      login: loginReducer\r\n    }, { \r\n      metaReducers: [storageSyncMetaReducer] \r\n    }),\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatIconModule, \r\n    MatFormFieldModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppState } from './../app.state';\r\nimport * as TaskActions from './../store/login.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Tio } from '../models/tio';\r\nimport { TioService } from '../tio/tio.service';\r\n\r\n@Component({\r\n  selector: 'app-blockchain',\r\n  templateUrl: './blockchain.component.html',\r\n  styleUrls: ['./blockchain.component.css']\r\n})\r\n\r\n\r\nexport class BlockChainComponent implements OnInit {\r\n  title = 'Ejemplo simpre de criptomonedas';\r\n  bloques = []\r\n  login: Observable<Tio[]>;\r\n\r\n  constructor(private tioService: TioService, private router: Router,private store: Store<AppState>) { \r\n    this.login = this.store.select('login');\r\n    if(localStorage.getItem('login')){\r\n      const usuario = JSON.parse(localStorage.getItem('login'))\r\n      console.log('login')\r\n      console.log(localStorage.getItem('login'))\r\n      if(usuario.nombre != 'error'){\r\n        //this.router.navigate(['/']);\r\n      }else{\r\n        this.router.navigate(['/login']);\r\n      }\r\n    } \r\n\r\n\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n  prueba(): void{\r\n    alert('Prueba');\r\n  }\r\n  \r\n}\r\n","<h1>{{ title }}</h1>\r\n<h3>Página de blockchain</h3>\r\n<button (click)=\"prueba()\">\r\n  Botón de prueba\r\n</button>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//import { LatLng, LatLngLiteral, PolyMouseEvent } from '../services/google-maps-types';\r\nimport { AgmCoreModule, LatLng, LatLngLiteral, PolyMouseEvent } from '@agm/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppState } from './../app.state';\r\nimport * as TaskActions from './../store/login.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Tio } from '../models/tio';\r\nimport { TioService } from '../tio/tio.service';\r\n\r\n@Component({\r\n  selector: 'app-geocerca-google',\r\n  templateUrl: './geocerca-google.component.html',\r\n  styleUrls: ['./geocerca-google.component.css']\r\n})\r\n\r\n\r\nexport class GeocercaGoogleComponent implements OnInit {\r\n  title = 'Ejemplo simpre de usar Google maps en angular';\r\n  lat = 51.678418;\r\n  lng = 7.809007;\r\n  clickeable = true;\r\n  draggable = true;\r\n  map = null;\r\n  tituloMarker = 'Titulo marker';\r\n  markers = []\r\n  color = \"black\";\r\n  visible = true;\r\n  paths: LatLngLiteral[] = []\r\n  login: Observable<Tio[]>;\r\n  /* paths: Array<LatLngLiteral> = [\r\n    {lat:51.69612661762577,lng:6.756516564459343},\r\n    {lat:51.9710789023937,lng:7.025681603521843},\r\n    {lat:52.00490726563561,lng:7.811204064459343},\r\n    {lat:51.87961464450517,lng:8.228684533209343},\r\n    {lat:51.699531328872304,lng:8.096848595709343},\r\n    {lat:51.52556429514715,lng:7.448655236334343}] */\r\n  //paths: LatLngLiteral[] = []\r\n  /* paths: Array<LatLngLiteral> = [\r\n    *     { lat: 0,  lng: 10 },\r\n    *     { lat: 0,  lng: 20 },\r\n    *     { lat: 10, lng: 20 },\r\n    *     { lat: 10, lng: 10 },\r\n    *     { lat: 0,  lng: 10 }\r\n    *   ] */\r\n  constructor(private tioService: TioService, private router: Router,private store: Store<AppState>) { \r\n    this.login = this.store.select('login');\r\n    if(localStorage.getItem('login')){\r\n      const usuario = JSON.parse(localStorage.getItem('login'))\r\n      //console.log('login')\r\n      //console.log(localStorage.getItem('login'))\r\n      if(usuario.nombre != 'error'){\r\n        this.router.navigate(['/']);\r\n      }else{\r\n        this.router.navigate(['/login']);\r\n      }\r\n    } \r\n\r\n\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n  limpiar(): void{\r\n    this.markers = [];\r\n    this.paths = [];\r\n  }\r\n  //google.maps.MouseEvent\r\n  mapClick(event) {\r\n    //console.log(JSON.stringify(event.coords));\r\n    let position = {\r\n      lat: event.coords.lat,\r\n      lng: event.coords.lng\r\n    }\r\n    this.markers.push(position);\r\n\r\n    this.paths = Object.values(this.markers);\r\n    /* this.paths.push({\r\n      lat: event.coords.lat,\r\n      lng: event.coords.lng\r\n    }); */\r\n    console.log(this.paths);\r\n    \r\n  }\r\n  \r\n}\r\n","<h1>{{ title }}</h1>\r\n<button \r\n  (click)=\"limpiar()\"  \r\n  class=\"btn btn-secondary btn-lg\"\r\n  type=\"button\">\r\n  Limpiar\r\n</button>\r\n<div style=\"width: 100%; height: 1rem; display: block;\"></div>\r\n<agm-map \r\n\r\n[latitude]=\"lat\" \r\n[longitude]=\"lng\"\r\n[clickableIcons]=\"clickeable\"\r\n[draggable]=\"draggable\"\r\n(mapClick)=\"mapClick($event)\">\r\n  <agm-marker \r\n  *ngFor=\"let marker of markers\"\r\n  [latitude]=\"marker.lat\" \r\n  [longitude]=\"marker.lng\">\r\n  </agm-marker>\r\n  <agm-polygon \r\n  [clickable]=\"true\"\r\n  [visible]=\"true\"\r\n  [editable]=\"true\"\r\n  [zIndex]=\"1\"\r\n  [draggable]=\"true\"\r\n    [paths]=\"paths\">\r\n  </agm-polygon>\r\n</agm-map>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-vieja',\r\n  templateUrl: './vieja.component.html',\r\n  styleUrls: ['./vieja.component.css']\r\n})\r\nexport class ViejaComponent implements OnInit {\r\n  quiengano = 'Next player: X';\r\n  squares = Array<String>(9).fill(null);\r\n  hayganador = 0;\r\n    contador = 0;\r\n    history = [\r\n      {\r\n        squares:Array<String>(9).fill(null)\r\n      }\r\n    ];\r\n    stepNumber = 0;\r\n    xIsNext = true;\r\n\r\n  constructor() {\r\n    //this.state.hayganador = 0;\r\n    //this.state.xIsNext = true;\r\n    //this.state.contador = 0;\r\n    //this.state.stepNumber = 0;\r\n    //var squares = [null,null,null,null,null,null,null,null,null];//Array<String>(9).fill(null);\r\n    //this.state.history.push(squares);\r\n   }\r\n\r\n  ngOnInit() {\r\n    /* var squares = [null,null,null,null,null,null,null,null,null];//Array<String>(9).fill(null);\r\n    this.state.history.push(squares); */\r\n  }\r\n\r\n  quiengano2(){\r\n    const squares = this.history[this.stepNumber];\r\n  if (this.hayganador == 1) {\r\n    return 'Winner: ' + (this.xIsNext ? 'O' : 'X');\r\n  } else {\r\n    return 'Next player: ' + (this.xIsNext ? 'X' : 'O');\r\n  }\r\n  }\r\n\r\n  mostrarSquares(i)\r\n  { \r\n    /* const current = this.history[history.length - 1];\r\n    return current.squares[i] == null ? ' ':current.squares[i].toString(); */\r\n    return this.squares[i];\r\n  }\r\n\r\n  handleClick(i) {\r\n    this.quiengano = this.quiengano2();\r\n    if(this.hayganador == 1){\r\n      return;\r\n    }\r\n    \r\n    //console.log(i);\r\n    \r\n    //console.log(this.squares[i])\r\n    const history = this.history.slice(0, this.stepNumber + 1);\r\n    //const current = history[history.length - 1];\r\n    //const squares = current.squares.slice();\r\n    const squares = this.squares.slice();\r\n    const caracter = this.xIsNext ? 'X' : 'O';\r\n    this.squares[i] = caracter.toString();\r\n    //this.state.history.push({squares: squares});\r\n    //this.state.stepNumber++;\r\n\r\n    this.history = history.concat([{ squares: squares }]),\r\n    this.stepNumber = history.length;\r\n    this.xIsNext = !this.xIsNext;\r\n\r\n    console.log(this.squares);\r\n\r\n    if (this.calculateWinner(this.squares) ) {\r\n      this.hayganador = 1;\r\n    }else{\r\n      this.hayganador = 0;\r\n    }\r\n    \r\n}\r\njumpTo(step) {\r\n  this.stepNumber = 0;\r\n    this.xIsNext = (step % 2) === 0;\r\n    this.squares = this.history[step].squares;\r\n    this.history = [\r\n      {\r\n        squares:Array<String>(9).fill(null)\r\n      }\r\n    ];\r\n}\r\n  calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","<p>vieja works!</p>\r\n    <div>\r\n    <div className=\"game\">\r\n              <div className=\"game-board\">\r\n                <div style=\"float: left;width: 300px;display:block;\">\r\n                <div style=\"float:left;width:100%;\" className=\"board-row\">\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(0)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[0]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(1)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[1]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(2)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[2]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float:left;width:100%;\" className=\"board-row\">\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(3)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[3]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(4)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[4]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(5)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[5]}}\r\n                    </button>\r\n                </div>\r\n                </div>\r\n                <div style=\"float:left;width:100%;\" className=\"board-row\">\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(6)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[6]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(7)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[7]}}\r\n                    </button>\r\n                </div>\r\n                <div style=\"float: left;width: 33.33%;\">\r\n                    <button \r\n                    (click)=\"handleClick(8)\"\r\n                    style=\"margin:0; paddingLeft: 0; listStyle: none; width:100px; height:100px;\" className=\"square\">\r\n                      {{squares[8]}}\r\n                    </button>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div style=\"float:left;width:100%;\" className=\"game-info\">\r\n                <div style=\"float:left;width:100%;\">\r\n                    {{quiengano}}      \r\n                </div>     \r\n                <div style=\"float:left;width:100%;\">\r\n                   <ol>\r\n                     <li  *ngFor=\"let item of history; let i = index\">\r\n                      <button (click)=\"jumpTo(i)\">Go to move #{{i}}</button>\r\n                    </li>\r\n                    </ol>   \r\n                </div>   \r\n              </div>\r\n            </div>\r\n    </div>","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\nimport { AppState } from './../app.state';\r\nimport * as TaskActions from './../store/login.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Tio } from '../models/tio';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { LoginUsuariosComponent } from '../tio/login-usuarios/login-usuarios.component';\r\n\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\n\r\n\r\nexport class MenuComponent implements OnInit {\r\n  //@ViewChild(LoginUsuariosComponent) child;\r\n\r\n  login: Observable<Tio[]>;\r\n  tio: Tio;\r\n  nombre = '';\r\n  email = 'zddfdfdsfd';\r\n  password = '';\r\n  usuariologeado = false;\r\n  constructor(location: Location, private router: Router, private store: Store<AppState>) {\r\n    this.login = this.store.select('login');\r\n    if(localStorage.getItem('login')){\r\n      const usuario = JSON.parse(localStorage.getItem('login'))\r\n      if(usuario.nombre != 'error'){\r\n        this.usuariologeado = true;\r\n      }else{\r\n        this.usuariologeado = false;\r\n        \r\n        console.log('location')\r\n        //console.log(this.router.url)\r\n        //console.log(this.activatedRoute.url);\r\n        //this.router.navigate(['/login']);\r\n      }\r\n    }else{\r\n\r\n    }\r\n  }\r\n  /* ngAfterViewInit() {\r\n    this.usuariologeado = this.child.usuariologeado\r\n  } */\r\n  logout() {\r\n    const usuario: Tio = {\r\n      id: 1,\r\n      nombre: \"error\",\r\n      password: \"123456\",\r\n      email: \"error@gmail.com\"\r\n    }\r\n    this.usuariologeado = false;\r\n    this.store.dispatch(new TaskActions.InicioUsuario(usuario) )\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<header class=\"container-fluid\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#/\">\r\n      <img src=\"./assets/images/principal.jpg\" width=\"50\" height=\"50\" alt=\"\">\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/'\">Inicio <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/blockchain'\">Blockchain</a>\r\n          </li>\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/geocerca'\">Geocerca</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/tasks'\">Estados persistentes</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/lista\">Listar usuarios</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/nuevo\">Nuevo</a>\r\n        </li>\r\n        <!-- <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/accounts'\"> Accounts</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/create-account'\"> Create Account </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/contacts'\"> Contacts </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/create-contact'\"> Create Contact </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/activities'\"> Activities </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/create-activity'\"> Create Activity </a>\r\n        </li> -->\r\n        <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"'/vieja'\">Tic Tac Toe</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\" *ngFor=\"let task of login | async\">\r\n          <!-- <h3>name: {{ task.nombre }} </h3> -->\r\n          <li class=\"nav-item\" *ngIf=\"task.nombre=='error'\">\r\n            <a class=\"nav-link\" [routerLink]=\"'/login'\">Login</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"task.nombre=='error'\">\r\n            <a class=\"nav-link\" [routerLink]=\"'/registro'\">Registrar</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"task.nombre!='error'\">\r\n            <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n          </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</header>","export class Tio {\r\n    id?: number;\r\n    nombre: string;\r\n    email: string;\r\n    password: string;\r\n    constructor(nombre: string, email: string, password: string) {\r\n        this.nombre = nombre;\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n}\r\n","// 1 - Importaciones\r\nimport { Action } from '@ngrx/store'\r\nimport { Tio } from '../models/tio'\r\n\r\n// 2 - Definición del tipo de acción\r\nexport const INICIO_TASK = 'Login Usuario'\r\nexport const REGISTRO_TASK = 'Registro Usuario'\r\n// 3 - Creación de la clase tipo AddTask\r\nexport class InicioUsuario implements Action {\r\n  readonly type = INICIO_TASK\r\n  constructor(public payload: Tio) { }\r\n}\r\n\r\nexport class RegistroUsuario implements Action {\r\n    readonly type = REGISTRO_TASK\r\n    constructor(public payload: Tio) { }\r\n  }\r\n\r\n// 4 - Exportación de la acción\r\nexport type Actions = InicioUsuario | RegistroUsuario","// 1 - Importaciones\r\nimport { EmailValidator } from '@angular/forms'\r\nimport { Tio } from '../models/tio'\r\nimport * as LoginActions from './login.actions'\r\n\r\n\r\n// 2 - Estado inicial\r\nconst initialState: Tio = {\r\n    id: 1,\r\n    nombre: \"error\",\r\n    password: \"123456\",\r\n    email: \"error@gmail.com\"\r\n}\r\n//localStorage.setItem('login', JSON.stringify(initialState))\r\n\r\n// localStorage.getItem('URL');\r\n// 3 - Switch con las funciones puras\r\nexport function loginReducer(state: Tio[] = [initialState], action: LoginActions.Actions) {\r\n  switch (action.type) {\r\n    case LoginActions.INICIO_TASK:\r\n        console.log('action.payload login')\r\n        console.log(JSON.stringify(action.payload))\r\n        \r\n        const usuario = {\r\n            id:action.payload.id,\r\n            nombre:action.payload.nombre,\r\n            email:action.payload.email,\r\n            password:action.payload.password\r\n        }\r\n\r\n        localStorage.setItem('login', JSON.stringify(usuario))\r\n\r\n        return [action.payload];\r\n    case LoginActions.REGISTRO_TASK:\r\n        console.log('action.payload registro')\r\n        console.log(JSON.stringify(action.payload))\r\n        \r\n        const usuario2 = {\r\n            id:action.payload.id,\r\n            nombre:action.payload.nombre,\r\n            email:action.payload.email,\r\n            password:action.payload.password\r\n        }\r\n\r\n        localStorage.setItem('login', JSON.stringify(usuario2))\r\n\r\n        return [action.payload];\r\n    default:\r\n        //localStorage.setItem('login', JSON.stringify(initialState))\r\n        return state;\r\n  }\r\n}","// 1 - Importaciones\r\nimport { Action } from '@ngrx/store'\r\nimport { Task } from './../tasks/task.model'\r\n\r\n// 2 - Definición del tipo de acción\r\nexport const ADD_TASK = 'Add task'\r\n\r\n// 3 - Creación de la clase tipo AddTask\r\nexport class AddTask implements Action {\r\n  readonly type = ADD_TASK\r\n  constructor(public payload: Task) { }\r\n}\r\n\r\n// 4 - Exportación de la acción\r\nexport type Actions = AddTask","// 1 - Importaciones\r\nimport { Task } from './../tasks/task.model'\r\nimport * as TaskActions from './tasks.actions'\r\n\r\n// 2 - Estado inicial\r\nconst initialState: Task = {\r\n  name: 'Primera tarea',\r\n  state: 'Pendiente'\r\n}\r\n\r\n// 3 - Switch con las funciones puras\r\nexport function taskReducer(state: Task[] = [initialState], action: TaskActions.Actions) {\r\n  switch (action.type) {\r\n    case TaskActions.ADD_TASK:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n}","// 1 - Importaciones\r\nimport { Action } from '@ngrx/store'\r\nimport { User } from '../models/user'\r\n\r\n// 2 - Definición del tipo de acción\r\nexport const AÑADIR_TASK = 'Añadir Usuario'\r\n\r\n// 3 - Creación de la clase tipo AddTask\r\nexport class AñadirUsuario implements Action {\r\n  readonly type = AÑADIR_TASK\r\n  constructor(public payload: User) { }\r\n}\r\n\r\n// 4 - Exportación de la acción\r\nexport type Actions = AñadirUsuario","// 1 - Importaciones\r\nimport { User } from '../models/user'\r\nimport * as UserActions from './users.actions'\r\n\r\n// 2 - Estado inicial\r\nconst initialState: User = {\r\n    id: 1,\r\n    username: \"luis13711\",\r\n    password: \"123456\",\r\n    firstName: \"Luis\",\r\n    lastName: \"Correa\"\r\n}\r\n\r\n// 3 - Switch con las funciones puras\r\nexport function userReducer(state: User[] = [initialState], action: UserActions.Actions) {\r\n  switch (action.type) {\r\n    case UserActions.AÑADIR_TASK:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\n// Importaciones\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from './../../app.state';\r\nimport * as TaskActions from './../../store/tasks.actions';\r\n\r\n@Component({\r\n  selector: 'app-add-task',\r\n  templateUrl: './add-task.component.html',\r\n  styleUrls: ['./add-task.component.css']\r\n})\r\nexport class AddTaskComponent implements OnInit {\r\n  \r\n  constructor(\r\n    private store: Store<AppState>\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Disparamos la acción\r\n  addTask(name, state) {\r\n    this.store.dispatch(new TaskActions.AddTask({name: name, state: state}) )\r\n  }\r\n\r\n}\r\n","<div class=\"left\">\r\n  <input type=\"text\" placeholder=\"Nombre\" #name>\r\n  <input type=\"text\" placeholder=\"Estado\" #state>\r\n  <button (click)=\"addTask(name.value,state.value)\">Crear Tarea</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { Task } from './../task.model';\r\nimport { AppState } from './../../app.state';\r\n\r\n@Component({\r\n  selector: 'app-list-tasks',\r\n  templateUrl: './list-tasks.component.html',\r\n  styleUrls: ['./list-tasks.component.css']\r\n})\r\nexport class ListTasksComponent implements OnInit {\r\n\r\n  // Definimos el observable:\r\n  tasks: Observable<Task[]>;\r\n  constructor(\r\n    private store: Store<AppState>\r\n  ) { \r\n    // Accedemos a la store:\r\n    this.tasks = this.store.select('tasks');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"right\" *ngIf=\"tasks\">\r\n  <h3>Tareas:</h3>\r\n  <ul>\r\n    <li *ngFor=\"let task of tasks | async\">\r\n      <h3>name: {{ task.name }} state: {{ task.state }}</h3>\r\n    </li>\r\n  </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n/* import { AddTaskComponent } from './tasks/add-task/add-task.component';\r\nimport { ListTasksComponent } from './tasks/list-tasks/list-tasks.component'; */\r\nimport axios from 'axios'\r\n\r\n//const api = localStorage.getItem('URL') + 'api/actividad';\r\n//const api = 'https://localhost:44382/' + 'api/actividad';\r\nconst api = \"http://www.programandoconrupert.com/ws/servicio-gatos.php\";\r\n@Component({\r\n  selector: 'app-todo-tasks',\r\n  templateUrl: './todo-tasks.component.html',\r\n  styleUrls: ['./todo-tasks.component.css']\r\n})\r\nexport class TodoTasksComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  // Disparamos la acción\r\n\r\n  public async addTask() : Promise<void> {\r\n    try{\r\n      let response = await fetch(api);\r\n      let data = await response.json()\r\n      alert(JSON.stringify(data));\r\n      \r\n    }catch(error){\r\n      alert(error);\r\n    }\r\n  }\r\n}\r\n","<app-list-tasks></app-list-tasks>\r\n<app-add-task></app-add-task> \r\n<button (click)=\"addTask()\">Usar estandar fetch</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TioService } from './tio.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tio } from '../models/tio';\r\n\r\n@Component({\r\n  selector: 'app-actualizar-tio',\r\n  templateUrl: './actualizar-tio.component.html',\r\n  styleUrls: ['./actualizar-tio.component.css']\r\n})\r\nexport class ActualizarTioComponent implements OnInit {\r\n  nombre = '';\r\n  email = '';\r\n  password = '';\r\n  constructor(\r\n    private tioService: TioService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.tioService.detalle(id).subscribe(\r\n      data => {\r\n        this.nombre = data.nombre;\r\n        this.email = data.email;\r\n        this.password = data.password;\r\n      },\r\n      err => {\r\n        console.log(err.error.mensaje);\r\n      }\r\n    );\r\n  }\r\n\r\n  onUpdate(): void {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    const tio = new Tio(this.nombre, this.email, this.password);\r\n    this.tioService.actualizar(tio, id).subscribe(\r\n      data => {\r\n        alert(data.mensaje);\r\n        this.router.navigate(['/']);\r\n      },\r\n      err => {\r\n        alert(err.error.mensaje);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<form #f=ngForm (ngSubmit)=\"onUpdate()\" novalidate>\r\n    <div class=\"form-group\">\r\n        <label for=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" [(ngModel)]=\"nombre\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password:</label>\r\n        <input \r\n            type=\"password\" \r\n            class=\"form-control\" \r\n            id=\"password\" \r\n            name=\"password\" \r\n            [(ngModel)]=\"password\" required>\r\n    </div>\r\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button \r\n            type=\"submit\" \r\n            class=\"btn btn-outline-success btn-lg\" \r\n            [disabled]=\"!f.valid\">\r\n            Actualizar\r\n        </button>\r\n        <input class=\"btn btn-danger\" type=\"reset\" value=\"Reset\" />\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { TioService } from './tio.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Tio } from '../models/tio';\r\n\r\n@Component({\r\n  selector: 'app-detalle-tio',\r\n  templateUrl: './detalle-tio.component.html',\r\n  styleUrls: ['./detalle-tio.component.css']\r\n})\r\nexport class DetalleTioComponent implements OnInit {\r\n  tio: Tio;\r\n  constructor(private tioService: TioService, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.tioService.detalle(id).subscribe(\r\n      data => {\r\n        this.tio = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  volver(): void {\r\n    window.history.back();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container mt-3\" *ngIf=\"tio\">\r\n    <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Detalles de {{tio.nombre}}</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <p class=\"card-text\"><b>Nombre: </b>{{tio.nombre}}</p>\r\n            <p class=\"card-text\"><b>Correo: </b>{{tio.email}}</p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <button class=\"btn btn-outline-primary btn-lg\" (click)=\"volver()\">Volver</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TioService } from './tio.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-tio',\r\n  templateUrl: './lista-tio.component.html',\r\n  styleUrls: ['./lista-tio.component.css']\r\n})\r\nexport class ListaTioComponent implements OnInit {\r\n  tios: any;\r\n\r\n  constructor(private tioService: TioService) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load(): void {\r\n    this.tios = this.tioService.lista();\r\n  }\r\n\r\n  borrar(id: number): void {\r\n    if (confirm('¿Seguro que lo quieres borrar?')) {\r\n      this.tioService.borrar(id).subscribe(\r\n        data => {\r\n          alert('tío eliminado');\r\n          this.load();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<table class=\"table table-dark text-center\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">id</th>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">Acciones</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let tio of tios | async\">\r\n            <td>{{tio.id}}</td>\r\n            <td>{{tio.nombre}}</td>\r\n            <td>{{tio.email}}</td>\r\n            <td>\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                    <button class=\"btn btn-outline-primary\" routerLink=\"/detalle/{{tio.id}}\">Ver</button>\r\n                    <button class=\"btn btn-outline-warning\" routerLink=\"/actualizar/{{tio.id}}\">Editar</button>\r\n                    <button class=\"btn btn-outline-danger\" (click)=\"borrar(tio.id)\">Borrar</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>\r\n    <button class=\"btn btn-outline-success btn-lg\" routerLink=\"/nuevo\">Nuevo</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Tio } from '../../models/tio';\r\nimport { TioService } from '../tio.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppState } from './../../app.state';\r\nimport * as TaskActions from './../../store/login.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login-usuarios',\r\n  templateUrl: './login-usuarios.component.html',\r\n  styleUrls: ['./login-usuarios.component.css']\r\n})\r\nexport class LoginUsuariosComponent implements OnInit {\r\n  login: Observable<Tio[]>;\r\n  tio: Tio;\r\n  nombre = '';\r\n  email = 'zddfdfdsfd';\r\n  password = '';\r\n  constructor(private tioService: TioService, private router: Router,private store: Store<AppState>) { \r\n    this.login = this.store.select('login');\r\n    if(localStorage.getItem('login')){\r\n      const usuario = JSON.parse(localStorage.getItem('login'))\r\n      console.log('login')\r\n      console.log(localStorage.getItem('login'))\r\n      if(usuario.nombre != 'error'){\r\n        this.router.navigate(['/']);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n\r\n  async onLogin() {\r\n    \r\n    this.tio = new Tio(this.nombre, this.email, this.password);\r\n    var response = await this.tioService.login(this.tio);\r\n    if(response.status==200){\r\n      //console.log('data:')\r\n      //console.log(JSON.stringify(response.data))\r\n      //[{\"id\":1,\"nombre\":\"luis13711\",\"email\":\"alberto13711@gmail.com\",\"password\":\"123456\"}]\r\n      const data = response.data;\r\n      const usuario = data[0];\r\n      //console.log(response.data[0].nombre)\r\n      \r\n      this.store.dispatch(new TaskActions.InicioUsuario({\r\n        id: usuario.id,\r\n        nombre: usuario.nombre,\r\n        email: usuario.email,\r\n        password: usuario.password\r\n      }) )\r\n      this.router.navigate(['/']);\r\n    }else{\r\n      console.log('ocurrio un error')\r\n    }\r\n    /* this.tioService.login(this.tio).subscribe(\r\n      data => {\r\n        console.log('data:')\r\n        console.log(JSON.stringify(data))\r\n        console.log(JSON.stringify(data[0]))\r\n        //alert(data.mensaje);\r\n        //this.router.navigate(['/']);\r\n      },\r\n      err => {\r\n        alert(err.error.mensaje);\r\n      }\r\n    ); */\r\n  }\r\n}\r\n","<div style=\"display:block;width:100%;height:5rem;\"></div>\r\n<div class=\"card card-default\" style=\"width:25rem;margin:auto;\">\r\n<div class=\"card-body\">\r\n    <div class=\"card-header text-center\"><h3>Login</h3></div>\r\n  <!-- <ul>\r\n    <li *ngFor=\"let task of login | async\">\r\n      <h3>name: {{ task.nombre }} </h3>\r\n    </li>\r\n  </ul> -->\r\n<form (ngSubmit)=\"onLogin()\" novalidate>\r\n    <div class=\"form-group\">\r\n        <label for=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" [(ngModel)]=\"nombre\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password:</label>\r\n        <input \r\n            type=\"password\" \r\n            class=\"form-control\" \r\n            id=\"password\" \r\n            name=\"password\" \r\n            [(ngModel)]=\"password\" required>\r\n    </div>\r\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button \r\n            type=\"submit\" \r\n            class=\"btn btn-outline-success btn-lg\">\r\n            Login\r\n        </button>\r\n        <input class=\"btn btn-danger\" type=\"reset\" value=\"Reset\" />\r\n    </div>\r\n</form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Tio } from '../models/tio';\r\nimport { TioService } from './tio.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nuevo-tio',\r\n  templateUrl: './nuevo-tio.component.html',\r\n  styleUrls: ['./nuevo-tio.component.css']\r\n})\r\nexport class NuevoTioComponent implements OnInit {\r\n  tio: Tio;\r\n  nombre = '';\r\n  email = '';\r\n  password = '';\r\n  constructor(private tioService: TioService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCreate(): void {\r\n    this.tio = new Tio(this.nombre, this.email, this.password);\r\n    this.tioService.nuevo(this.tio).subscribe(\r\n      data => {\r\n        alert(data.mensaje);\r\n        this.router.navigate(['/']);\r\n      },\r\n      err => {\r\n        alert(err.error.mensaje);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form #f=ngForm (ngSubmit)=\"onCreate()\" novalidate>\r\n    <div class=\"form-group\">\r\n        <label for=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" [(ngModel)]=\"nombre\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password:</label>\r\n        <input \r\n            type=\"password\" \r\n            class=\"form-control\" \r\n            id=\"password\" \r\n            name=\"password\" \r\n            [(ngModel)]=\"password\" required>\r\n    </div>\r\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button \r\n            type=\"submit\" \r\n            class=\"btn btn-outline-success btn-lg\" \r\n            [disabled]=\"!f.valid\">\r\n            Crear\r\n        </button>\r\n        <input class=\"btn btn-danger\" type=\"reset\" value=\"Reset\" />\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Tio } from '../../models/tio';\r\nimport { TioService } from '../tio.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nimport { AppState } from './../../app.state';\r\nimport * as TaskActions from './../../store/login.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registrar-usuarios',\r\n  templateUrl: './registrar-usuarios.component.html',\r\n  styleUrls: ['./registrar-usuarios.component.css']\r\n})\r\nexport class RegistrarUsuariosComponent implements OnInit {\r\n  login: Observable<Tio[]>;\r\n  tio: Tio;\r\n  nombre = '';\r\n  email = 'zddfdfdsfd';\r\n  password = '';\r\n  constructor(private tioService: TioService, private router: Router, private store: Store<AppState>) {\r\n    this.login = this.store.select('login');\r\n    if(localStorage.getItem('login')){\r\n      const usuario = JSON.parse(localStorage.getItem('login'))\r\n      //console.log('login')\r\n      //console.log(localStorage.getItem('login'))\r\n      if(usuario.nombre != 'error'){\r\n        this.router.navigate(['/']);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async onCreate() {\r\n    this.tio = new Tio(this.nombre, this.email, this.password);\r\n    var response = await this.tioService.registrar(this.tio);\r\n    if(response.status==200){\r\n      const data = response.data;\r\n      const usuario = data[0];\r\n      this.store.dispatch(new TaskActions.RegistroUsuario({\r\n        id: usuario.id,\r\n        nombre: usuario.nombre,\r\n        email: usuario.email,\r\n        password: usuario.password\r\n      }) )\r\n      this.router.navigate(['/']);\r\n    }else{\r\n      console.log('ocurrio un error')\r\n    }\r\n  }\r\n}\r\n","<div style=\"display:block;width:100%;height:5rem;\"></div>\r\n<div class=\"card card-default\" style=\"width:25rem;margin:auto;\">\r\n<div class=\"card-body\">\r\n    <div class=\"card-header text-center\"><h3>Registro</h3></div>\r\n  <!-- <ul>\r\n    <li *ngFor=\"let task of login | async\">\r\n      <h3>name: {{ task.nombre }} </h3>\r\n    </li>\r\n  </ul> -->\r\n    <form (ngSubmit)=\"onCreate()\" novalidate>\r\n        <div class=\"form-group\">\r\n            <label for=\"nombre\">Nombre:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" [(ngModel)]=\"nombre\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password:</label>\r\n            <input \r\n                type=\"password\" \r\n                class=\"form-control\" \r\n                id=\"password\" \r\n                name=\"password\" \r\n                [(ngModel)]=\"password\" required>\r\n        </div>\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            <button \r\n                type=\"submit\" \r\n                class=\"btn btn-outline-success btn-lg\">\r\n                Crear\r\n            </button>\r\n            <input class=\"btn btn-danger\" type=\"reset\" value=\"Reset\" />\r\n        </div>\r\n    </form>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Tio } from '../models/tio';\r\nimport axios from \"axios\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TioService {\r\n\r\n  tioURL = 'https://servicios-profesionales.herokuapp.com/tio/';\r\n  usuariologeado = false;\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  obtenerUsuarioLogeado(): boolean{\r\n    return this.usuariologeado;\r\n  }\r\n  cambiarLogeo(valor:boolean): void {\r\n    this.usuariologeado = valor;\r\n  }\r\n\r\n  lista(): Observable<Tio[]> {\r\n    return this.httpClient.get<Tio[]>(this.tioURL + 'lista');\r\n  }\r\n\r\n  detalle(id: number): Observable<Tio> {\r\n    return this.httpClient.get<Tio>(this.tioURL + `detalle/${id}`);\r\n  }\r\n\r\n  async login(tio: Tio){\r\n    try{\r\n      var response;\r\n      response = await axios.post(this.tioURL+'login', tio);\r\n      return response;\r\n      \r\n    }catch(e){\r\n      return e.response;\r\n    }\r\n  }\r\n  async registrar(tio: Tio){\r\n    try{\r\n      var response;\r\n      response = await axios.post(this.tioURL+'nuevo', tio);\r\n      return response;\r\n      \r\n    }catch(e){\r\n      return e.response;\r\n    }\r\n  }\r\n\r\n  /* registrar(tio: Tio): Observable<any> {\r\n    return this.httpClient.post<any>(this.tioURL + 'nuevo', tio);\r\n  } */\r\n\r\n  nuevo(tio: Tio): Observable<any> {\r\n    return this.httpClient.post<any>(this.tioURL + 'nuevo', tio);\r\n  }\r\n\r\n  actualizar(tio: Tio, id: number): Observable<any> {\r\n    return this.httpClient.put<any>(this.tioURL + `actualizar/${id}`, tio);\r\n  }\r\n\r\n  borrar(id: number): Observable<any> {\r\n    return this.httpClient.delete<any>(this.tioURL + `borrar/${id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode, NgModule } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n  // main.ts persisted\r\nimport {\r\n  getAllDataFromLocalForage,\r\n  default as localForage,\r\n} from 'ngrx-store-persist';\r\n \r\ngetAllDataFromLocalForage({\r\n  driver: localForage.INDEXEDDB,\r\n  keys: [\r\n    'user',\r\n    'posts',\r\n    'tasks',\r\n    'users',\r\n    'login'\r\n  ],\r\n}).then(() => {\r\n  platformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n});"]}